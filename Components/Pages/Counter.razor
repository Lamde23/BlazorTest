@page "/counter"
@page "/counter/{initialCount:int?}"
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<MyButton OnClick="IncrementCount" class="btn btn-success">Button In Conuter</MyButton>

<p> InitialCount=@InitialCount</p>

<div style="background-color: lightblue;" 
@onmouseover="MouseOver" 
@onmouseout="MouseOut">
    @divText
</div>

<div class="mt-3">
    <input @bind="text" @bind:event="oninput" @bind:after="Search">
    <button @onclick="OnClick">Clear</button>
    <p>@text</p>
    <p>@searchResult</p>
</div>

@code {
    private int currentCount = 0;
    string text = "";
    string divText = "Mouse out";
    string searchResult = "";
    protected override void OnInitialized(){
        currentCount = InitialCount;
    }

    [Parameter]
    public int InitialCount {get;set;} 

    //asyn functions
    async Task IncrementCountAsync(){
        await Task.Delay(1000);
        currentCount++;
    }

    private void IncrementCount(MouseEventArgs e) => currentCount++;

    //redners after change
    @* private void OnInput(ChangeEventArgs e) => text = (string)e.Value; *@
    private void MouseOver(MouseEventArgs e) => divText = "Mouse Overed";
    private void MouseOut(MouseEventArgs e) => divText = "Mouse out";
    private void OnClick(MouseEventArgs e)
    {
        text = "";
    }

    async Task Search(){
        searchResult = "Searching...";
        await Task.Delay(2000);
        searchResult = $"Found - {Random.Shared.Next()} results!";
    }
    
}
